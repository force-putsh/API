‚úÖ Question 1 : Quelle est la diff√©rence entre monolithique et microservices ?

| Architecture      | Description                                                                                                                |
| ----------------- | -------------------------------------------------------------------------------------------------------------------------- |
| **Monolithique**  | Une seule application contenant toute la logique, souvent difficile √† maintenir et √† faire √©voluer                         |
| **Microservices** | Une architecture o√π chaque fonctionnalit√© est un service ind√©pendant, l√©ger, pouvant √™tre d√©ploy√© et mis √† jour s√©par√©ment |


‚úÖ Question 1 : Quelle est la diff√©rence entre monolithique et microservices ?
Architecture	Description
Monolithique	Une seule application contenant toute la logique, souvent difficile √† maintenir et √† faire √©voluer
Microservices	Une architecture o√π chaque fonctionnalit√© est un service ind√©pendant, l√©ger, pouvant √™tre d√©ploy√© et mis √† jour s√©par√©ment

üëâ Le TP4 montre comment isoler les services dans des conteneurs Docker pour faciliter le d√©ploiement.

‚úÖ Question 2 : Pourquoi utilise-t-on Docker pour les microservices ?
Docker permet :

L‚Äôisolation de chaque service dans un conteneur

Une portabilit√© totale : le service tourne partout o√π Docker est install√©

Une configuration standardis√©e (via Dockerfile)

Une mise √† l‚Äô√©chelle facile

‚úÖ Question 3 : Quel est le r√¥le de Docker Compose ?
Docker Compose sert √† :

D√©finir plusieurs services dans un seul fichier YAML

Lancer tous les services avec une seule commande

G√©rer les r√©seaux internes entre les conteneurs

üëâ Dans le TP4, on l‚Äôutilise pour lancer et connecter automatiquement deux microservices Flask.